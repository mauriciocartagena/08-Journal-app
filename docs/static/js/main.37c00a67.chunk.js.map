{"version":3,"sources":["firebase/firebase-config.js","types/types.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/notes.js","actions/ui.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JornalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","routers/PublicRouter.js","routers/PrivateRoute.js","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","types","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","uid","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","activeNote","note","type","payload","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refresNote","Swal","fire","title","deleteNote","setError","err","FinishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","e","message","logout","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","LoginScreen","useDispatch","loading","useSelector","state","ui","formValues","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","NotesAppBar","active","style","display","files","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","console","log","NoteScreen","activeId","useRef","useEffect","current","delete","startDeleting","NothingSelected","JornalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","map","key","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","PublicRoute","isAuthenticated","Component","rest","props","PrivateRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.37c00a67.chunk.js","sourcesContent":["import  firebase from  'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCrBiLD7cpyRuOR6RpmAA0ubNQFXNACnoI\",\n    authDomain: \"react-app-cursos-2ff71.firebaseapp.com\",\n    databaseURL: \"https://react-app-cursos-2ff71.firebaseio.com\",\n    projectId: \"react-app-cursos-2ff71\",\n    storageBucket: \"react-app-cursos-2ff71.appspot.com\",\n    messagingSenderId: \"96306682559\",\n    appId: \"1:96306682559:web:53bd28eb4f62b17044840a\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\n\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\n\nexport {\n    firebase,\n    db,\n    googleAuthProvider,\n}\n","\n\n\nexport const types = {\n\n    login: '[Auth] Login',\n    logout: '[Auth] logout',\n\n\n    uiSetError:'[UI] Set Error',\n    uiRemoveError:'[UI] Remove Error',\n\n    uiStartLoading:'[UI] Start loading',\n    uiFinishLoading:'[UI] Finish loading ',\n\n    notesAddNew: '[Notes] New note',\n    notesActive: '[Notes] Set active note',\n    notesLoad: '[Notes] Load note',\n    notesUpdated: '[Notes] Update note ',\n    notesFileUrl: '[Notes] Update image url',\n    notesDelete: '[Notes] Delete note',\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\n\n}","\n\nexport const fileUpload = async ( file )=>{\n\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dzbirb2q6/upload';\n\n    const formData = new FormData();\n\n    formData.append('upload_preset','react-journal');\n    formData.append('file',file);\n\n    try{\n        const resp =  await fetch( cloudUrl ,{\n\n            method:'POST',\n            body:formData,\n        });\n\n        if (resp.ok) {\n            const cloudResp = await resp.json();\n            return cloudResp.secure_url;\n        }else{\n            throw await resp.json();\n        }\n    }\n    catch( error ){\n        throw error;\n    }\n\n\n\n}","import { db } from \"../firebase/firebase-config\"\n\n\nexport const  loadNotes =  async( uid ) =>{\n\n    const notesSnap = await db.collection(`${ uid }/journal/notes`).get();\n    const notes = [];\n\n    notesSnap.forEach( snapHijo => {\n\n        notes.push({\n            id:snapHijo.id,\n            ...snapHijo.data()\n        })\n\n    });\n\n    return notes;\n\n}","\nimport Swal from 'sweetalert2'\nimport { db } from \"../firebase/firebase-config\";\nimport { fileUpload } from '../helpers/fileUpload';\nimport { loadNotes } from \"../helpers/loadNotes\";\nimport { types } from \"../types/types\";\n\n\n\nexport const startNewNote = ()=>{\n\n    return async ( dispatch, getState )=>{\n\n        const { uid } = getState().auth;\n\n        const newNote = {\n\n            title:'',\n            body:'',\n            date: new Date().getTime()\n\n        }\n\n        const doc = await db.collection(`${ uid }/journal/notes`).add( newNote );\n\n        dispatch( activeNote( doc.id, newNote ) );\n        dispatch( addNewNote( doc.id, newNote ) );\n\n    }\n\n}\n\nexport const activeNote = ( id, note ) =>({\n    type:types.notesActive,\n    payload:{\n        id,\n        ...note\n    }\n});\n\nexport const addNewNote = ( id, note ) =>({\n\n    type:types.notesAddNew,\n    payload:{\n        id, ...note\n    }\n\n})\n\nexport  const startLoadingNotes = ( uid ) =>{\n    return async ( dispatch )=>{\n\n        const notes =  await loadNotes( uid );\n\t\tdispatch( setNotes( notes ) );\n\n    }\n}\n\nexport const setNotes = ( notes )=>({\n\n    type:types.notesLoad,\n    payload:notes\n\n});\n\nexport const startSaveNote = ( note ) =>{\n    return async ( dispatch, getState )=>{\n\n        const { uid } = getState().auth;\n\n        if (!note.url) {\n            delete note.url;\n        }\n\n        const noteToFirestore = { ...note };\n\n        delete( noteToFirestore.id );\n\n        await db.doc(`${ uid }/journal/notes/${ note.id }`).update( noteToFirestore );\n\n        dispatch( refresNote( note.id, noteToFirestore ) );\n\n        Swal.fire('Saved', note.title, 'success' );\n\n    }\n}\n\nexport const refresNote = ( id, note ) =>({\n\n    type:types.notesUpdated,\n    payload:{\n        id,\n        note:{\n            id, \n            ...note\n        }\n    }\n\n});\n\nexport const startUploading = ( file )=>{\n    return async( dispatch, getState )=>{\n\n        const { active:activeNote } = getState().notes;\n        \n        Swal.fire({\n            title:'Uploading...',\n            text:'Please wait...',\n            allowOutsideClick:false,\n            onBeforeOpen:()=>{\n                Swal.showLoading();\n            }\n        })\n        \n        const fileUrl = await fileUpload( file );\n\n        activeNote.url = fileUrl;\n \n        dispatch( startSaveNote( activeNote ) );\n\n        Swal.close();\n\n    }\n}\n\nexport const startDeleting = ( id ) =>{\n   \n    return async( dispatch, getState )=>{\n\n        const uid = getState().auth.uid;\n        await db.doc(`${uid}/journal/notes/${ id }`).delete();\n\n        dispatch(deleteNote(id));\n\n    }\n}\n\nexport const deleteNote = (id) =>({\n    type: types.notesDelete,\n    payload:id\n});\n\nexport const noteLogout = () =>({\n    type:types.notesLogoutCleaning\n})","import { types } from \"../types/types\";\n\n\nexport const setError = ( err ) =>({\n    type:types.uiSetError,\n    payload:err\n});\n\nexport const removeError = () =>({\n    type:types.uiRemoveError,\n});\n\nexport const StartLoading = () =>({\n    type:types.uiStartLoading\n});\n\nexport const FinishLoading = () =>({\n    type:types.uiFinishLoading\n});","import Swal from 'sweetalert2'\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config'\nimport { types } from \"../types/types\";\nimport { noteLogout } from './notes';\nimport { StartLoading, FinishLoading } from './ui'\n\nexport const startLoginEmailPassword = ( email, password ) =>{\n    return ( dispatch ) =>{\n\n        dispatch( StartLoading() );\n        \n        firebase.auth().signInWithEmailAndPassword( email, password )\n            .then( ({ user }) =>{\n                dispatch(login( user.uid, user.displayName ),)\n                dispatch( FinishLoading() );\n\n            }).catch( e =>{\n                dispatch( FinishLoading());\n                Swal.fire('Error',e.message,'error');\n            });\n       \n    }\n}\n\nexport const startRegisterWithEmailPasswordName = ( email, password, name )=>{\n\n    return( dispatch )=>{\n        \n        firebase.auth().createUserWithEmailAndPassword( email, password )\n            .then( async ({ user }) =>{\n\n               await user.updateProfile({ displayName:name })\n                dispatch(\n                    login( user.uid, user.displayName ),\n                )\n            }).catch( e =>{\n                Swal.fire('Error',e.message,'error');\n            });\n\n    }\n\n}\n\nexport const startGoogleLogin = () =>{\n    return ( dispatch )=>{\n\n        firebase.auth().signInWithPopup( googleAuthProvider )\n            .then( ({ user }) =>{\n                dispatch(\n                    login( user.uid, user.displayName ),\n                )\n            });\n\n    }\n}\n\n\nexport const login = ( uid, displayName ) =>({\n    type :types.login,\n    payload:{\n        uid,\n        displayName\n    }\n});\n\n\n\nexport const startLogout = ()=>{\n\n    return async( dispatch )=>{\n        await firebase.auth().signOut();\n\n        dispatch( logout() );\n        dispatch( noteLogout() );\n    }\n}\n\nexport const logout = () =>({\n    type:types.logout\n})","import { useState } from \"react\"\n\nexport const useForm = ( initialState = {}  ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = ( newFormState = initialState ) => {\n        setValues( newFormState );\n    }\n\n    const handleInputChange = ( { target } ) =>{\n\n        // console.log(target.name);\n        // console.log(target.value);\n\n        setValues({\n            ...values,\n           [target.name] : target.value\n        });\n\n    }\n\n    return [ values, handleInputChange,reset ];\n}","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth'\nimport { useForm } from '../../hooks/useForm';\n\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n    const { loading } = useSelector(state => state.ui)\n\n    const [ formValues, handleInputChange ] = useForm({\n        email:'hello@gmail.com',\n        password:'123456'\n    });\n\n    const { email, password } = formValues;\n\n    const handleLogin = (e) =>{\n        e.preventDefault();\n        dispatch( startLoginEmailPassword( email, password ));\n    }\n\n    const handleGoogleLogin = () =>{\n        dispatch( startGoogleLogin() );\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\" >Login</h3>\n\n            <form onSubmit={ handleLogin }\n                  className=\"animate__animated animate__fadeIn animate__faster\"\n            >\n\n                <input\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={ email }\n                    onChange={ handleInputChange }\n                />\n\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={ password }\n                    onChange={ handleInputChange }\n                />\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                    disabled={ loading }\n                >\n                    Login\n                </button>\n               \n               <div className=\"auth__social-networks\" >\n                   <p>Login with social networks</p>\n                   <div \n                        className=\"google-btn\"\n                        onClick = { handleGoogleLogin }\n                    >\n                        <div className=\"google-icon-wrapper\">\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                        </div>\n                        <p className=\"btn-text\">\n                            <b>Sign in with google</b>\n                        </p>\n                    </div>\n               </div>\n               <Link to=\"/auth/register\" className=\"link\">\n                     Create new account\n               </Link>\n\n            </form>\n        </>\n    )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { useForm } from '../../hooks/useForm';\nimport validator from 'validator'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setError, removeError } from '../../actions/ui';\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\n\nexport const RegisterScreen = () => {\n\n    const dispatch = useDispatch();\n    const { msgError } = useSelector(state => state.ui);\n\n\n   const [formValues, handleInputChange]  = useForm({\n        name: 'Hello',\n        email: 'hello@gmail.com',\n        password: '123456',\n        password2: '123456'\n    });\n\n   const { name, email, password, password2 } = formValues;\n    \n\n    const handleRegister = (e)=>{\n        e.preventDefault();\n        if( isFormValid() ){\n            dispatch( startRegisterWithEmailPasswordName( email, password, name ) );\n        }\n    }\n\n    const isFormValid = () =>{\n        \n        if( name.trim().length === 0 ){\n            dispatch( setError('Name is required') );\n            return false;\n        }else if( !validator.isEmail( email ) ){\n            dispatch( setError('Email is not valid') );\n            return false;\n        }\n        else if( password !== password2 || password.length < 5){\n            dispatch( setError('Password should be at least 6 chraracters and match each other') );\n            return false;\n        }\n        dispatch( removeError());\n\n        return true;\n    }\n\n    return (\n        <>\n        <h3 className=\"auth__title\" >Register</h3>\n\n        <form onSubmit={ handleRegister }\n             className=\"animate__animated animate__fadeIn animate__faster\"\n        >\n            {\n                msgError &&\n                (\n                    <div className=\"auth__alert-error\" >\n                        { msgError }\n                    </div>\n                )\n            }\n\n            <input\n                type=\"text\"\n                placeholder=\"Name\"\n                name=\"name\"\n                className=\"auth__input\"\n                autoComplete=\"off\"\n                value={ name }\n                onChange={ handleInputChange }\n            />\n\n            <input\n                type=\"text\"\n                placeholder=\"Email\"\n                name=\"email\"\n                value={ email }\n                className=\"auth__input\"\n                autoComplete=\"off\"\n                onChange={ handleInputChange }\n            />\n\n            <input\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"password\"\n                value={ password }\n                className=\"auth__input\"\n                onChange={ handleInputChange }\n            />\n            \n            <input\n                type=\"password\"\n                placeholder=\"Confirm\"\n                name=\"password2\"\n                value={ password2 }\n                className=\"auth__input\"\n                onChange={ handleInputChange }\n            />\n\n            <button\n                type=\"submit\"\n                className=\"btn btn-primary btn-block mb-5 \"\n            >\n                Register\n            </button>\n           <Link to=\"/auth/login\" \n                 className=\"link\">\n                 Already registered?\n           </Link>\n\n        </form>\n    </>\n    )\n}\n","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport { LoginScreen } from '../components/auth/LoginScreen'\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\n\nexport const AuthRouter = () => {\n    return (\n        <div className=\"auth__main\" >\n            <div className=\"auth__box-container\" >\n                <Switch>\n                    <Route\n                        exact\n                        path=\"/auth/login\"\n                        component={ LoginScreen }\n                    />\n\n                    <Route\n                        exact\n                        path=\"/auth/register\"\n                        component={ RegisterScreen }\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n\n                </Switch>\n            </div>\n\n            \n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startSaveNote, startUploading } from '../../actions/notes'\n\nexport const NotesAppBar = () => {\n\n    const dispatch = useDispatch();\n    const { active } = useSelector( state =>state.notes);\n\n    const handleSave = ()=>{\n        dispatch( startSaveNote(active) );\n    }\n\n    const handlePictureClick = () =>{\n\n        document.querySelector('#fileSelector').click();\n        console.log('picture');\n\n    }\n    const handleFileChange = (e)=>{\n\n        const file = e.target.files[0];\n\n        if( file ){\n            dispatch( startUploading( file ) );\n        }\n    }\n\n    return (\n        <div className=\"notes__appbar\" >\n            <span>24 de septiembre 2020</span>\n\n            <input\n                id=\"fileSelector\"\n                type=\"file\"\n                name=\"file\"\n                style={{ display:\"none\" }}\n                onChange={ handleFileChange }\n            />\n\n            <div>\n                <button className=\"btn\" \n                        onClick={ handlePictureClick }\n                >\n                    Picture\n                </button>\n\n                <button className=\"btn\" \n                    onClick={ handleSave }\n                >\n                    Save\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { activeNote, startDeleting } from '../../actions/notes';\nimport { useForm } from '../../hooks/useForm';\nimport { NotesAppBar } from './NotesAppBar'\n\nexport const NoteScreen = () => {\n\n    const { active:note } = useSelector(state => state.notes);\n    const dispatch = useDispatch();\n    const  [ formValues, handleInputChange, reset ] = useForm( note );\n    const { body, title, id } = formValues;\n\n    const activeId = useRef( note.id );\n\n    useEffect(() => {\n        if ( note.id  !== activeId.current  ) {\n            reset( note );\n            activeId.current = note.id;\n        }\n\n\n    }, [note, reset]);\n\n    useEffect(()=>{\n        \n\n        dispatch( activeNote( formValues.id,{ ...formValues } ) )\n\n    },[ formValues, dispatch]);\n\n    const handleDelete = ()=>{\n        dispatch( startDeleting(id) );\n    }\n    \n\n    return (\n        <div className=\"notes__main-content\" >\n            \n            <NotesAppBar />\n\n            <div className=\"notes__content\" >\n                <input \n                    type=\"text\"\n                    name=\"title\"\n                    placeholder=\"Some awesome title\"\n                    className=\"notes__title-input\"\n                    autoComplete=\"off\"\n                    value={ title }\n                    onChange={ handleInputChange }\n                />\n\n                <textarea\n                    name=\"body\"\n                    placeholder=\"What happened today\"\n                    className=\"notes__textarea\"\n                    value={ body }\n                    onChange={ handleInputChange }\n                ></textarea>\n\n                {\n                    ( note.url ) \n                        &&\n                        (\n                            <div className=\"notes__image\" >\n                                <img\n                                    src={ note.url }\n                                    alt=\"imagen\"\n                                />\n                            </div>\n                        )\n                }\n                \n\n            </div>\n                <button className=\"btn btn-danger\" \n                    onClick={ handleDelete }\n                    >\n                    Delete\n                </button>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const NothingSelected = () => {\n    return (\n        <div className=\"nothing__main-content\" >\n            <p>\n                Select something\n                <br />\n                pr create an entry!\n            </p>\n\n            <i className=\"far fa-star fa-4x mt-5\"></i>\n        </div>\n    )\n}\n","import React from 'react';\nimport moment from 'moment';\nimport { activeNote } from '../../actions/notes';\nimport { useDispatch } from 'react-redux';\n\nexport const JornalEntry = ({ id, date, title, body, url }) => {\n\n    const noteDate = moment(date);\n\n    const dispatch = useDispatch();\n\n    const handleEntryClick = () =>{\n        //dispatch\n        dispatch( activeNote( id, {\n            date,\n            title,\n            body,\n            url\n        }));\n    }\n    return (\n        <div className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\" onClick = { handleEntryClick }>\n            \n            {   \n                (url) &&\n                    <div \n                        className=\"journal__entry-picture\" \n                        style={{ \n                            backgroundSize:'cover',\n                            backgroundImage:`url(${ url })`\n                        }} \n                   />\n            }\n            <div className=\"journal__entry-body\" >\n                <p className=\"journal__entry-title\" >\n                    { title }\n                </p>\n                <p className=\"journal__entry-content\" >\n                   { body }\n                </p>\n            </div>\n            <div className=\"journal__entry-date-box\" >\n                <span>{ noteDate.format('dddd') }</span>\n                <h4>{ noteDate.format('Do') }</h4>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { JornalEntry } from './JornalEntry';\n\nexport const JournalEntries = () => {\n\n    const { notes } = useSelector(state => state.notes)\n\n    return (\n        <div className=\"journal__estries\" >\n            \n            {\n                notes.map( note =>(\n                   <JornalEntry \n                        key={ note.id } \n                        { ...note }\n                    />\n                ))\n            }\n            \n\n        </div>\n    )\n}\n","import React from 'react';\nimport  { useDispatch,useSelector }  from 'react-redux'\nimport { startLogout } from '../../actions/auth';\nimport { startNewNote } from '../../actions/notes';\nimport { JournalEntries } from './JournalEntries'\n\nexport const Sidebar = () => {\n\n    const dispatch = useDispatch();\n\n    // Otra forma de sacar informacion del redux\n\n    // const store = useStore();\n    // const { auth } = store.getState();\n    // const { name } = auth;\n    \n    // Segunda forma de sacar información del redux\n    const { name } = useSelector(state => state.auth);\n\n\n    const handleLogout = () =>{\n        dispatch( startLogout() );\n    }\n    const handleAddNew = () =>{\n        dispatch(startNewNote());\n    }\n\n    return (\n        <aside className=\"journal__sidebar\" >\n            \n            <div className=\"journal__sidebar-navbar\" >\n                <h3 className=\"mt-5\" >\n                    <i className=\"far fa-moon\"></i>\n                    <span> { name } </span>\n                </h3>\n                <button className=\"btn\" \n                    onClick={ handleLogout }\n                >\n                    Logout\n                </button>\n            </div>\n            <div \n            \n                className=\"journal__new-entry\" \n                onClick = { handleAddNew }\n                >\n                <i className=\"far fa-calendar-plus fa-5x\" ></i>\n                <p className=\"mt-5\" >\n                    New entry\n                </p>\n            </div>\n            <JournalEntries />\n            \n        </aside>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { NoteScreen } from '../notes/NoteScreen'\nimport { NothingSelected } from './NothingSelected'\nimport { Sidebar } from './Sidebar'\n\nexport const JournalScreen = () => {\n\n\n    const { active } = useSelector(state => state.notes)\n\n    return (\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\" >\n           <Sidebar/>\n                <main>\n                    { \n                        ( active )\n                            ? (<NoteScreen/>)\n                            : (<NothingSelected/>)\n\n                    }\n                </main>\n        </div>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom'\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    \n    return (\n        <Route { ...rest }\n        component={ (props)=>(\n            (isAuthenticated)\n            ? ( <Redirect to=\"/\"/> )\n            : ( <Component { ...props } /> )\n        )}\n    />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated:PropTypes.bool.isRequired,\n    component:PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom'\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props)=>(\n                (isAuthenticated)\n                    ? ( <Component { ...props } /> )\n                    : (<Redirect to=\"/auth/login\" />)\n            )}\n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated:PropTypes.bool.isRequired,\n    component:PropTypes.func.isRequired\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\n\nimport { AuthRouter } from \"./AuthRouter\";\nimport { JournalScreen } from \"../components/journal/JournalScreen\";\nimport { firebase } from '../firebase/firebase-config';\nimport { login } from \"../actions/auth\";\nimport { PublicRoute } from \"./PublicRouter\";\nimport { PrivateRoute } from \"./PrivateRoute\";\nimport {  startLoadingNotes } from \"../actions/notes\";\n\nexport const AppRouter = () => {\n\n\tconst dispatch = useDispatch();\n\n\tconst [checking, setChecking] = useState(true);\n\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false);\n\n\tuseEffect(() => {\n\t\tfirebase.auth().onAuthStateChanged( async (user)=>{\n\n\t\t\tif (user?.uid) {\n\t\t\t\tdispatch( login( user.uid, user.displayName ));\n\t\t\t\tsetIsLoggedIn(true);\n\n\t\t\t\tdispatch( startLoadingNotes( user.uid ) );\n\t\t\t}\n\t\t\telse{\n\t\t\t\tsetIsLoggedIn(false);\n\t\t\t}\n\t\t\tsetChecking(false);\n\t\t\t\t\n\t\t});\n\t}, [dispatch, setChecking, setIsLoggedIn]);\n\n\tif (checking) {\n\t\treturn(\n\t\t\t<h1>Wait...</h1>\n\t\t)\n\t}\n\n\treturn (\n\t\t<Router>\n\t\t\t<div>\n\t\t\t\t<Switch>\n\n\t\t\t\t\t<PublicRoute\t\n\t\t\t\t\t\tpath='/auth'\n\t\t\t\t\t\tcomponent={ AuthRouter }\n\t\t\t\t\t\tisAuthenticated={ isLoggedIn }\n\t\t\t\t\t/>\n\n\t\t\t\t\t<PrivateRoute\n\t\t\t\t\t\tpath='/'\n\t\t\t\t\t\tcomponent={ JournalScreen }\n\t\t\t\t\t\tisAuthenticated={ isLoggedIn }\n\t\t\t\t\t/>\n\t\t\t\t\t<Redirect to='/auth/login'/>\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</Router>\n\t)\n}","import { types } from \"../types/types\";\n\n\nconst initialState = {\n    notes: [],\n    active: null\n}\n\nexport const  notesReducer = ( state = initialState, action ) => {\n\n    switch (action.type) {\n\n        case types.notesActive:\n            return{\n                ...state,\n                active:{\n                    ...action.payload\n                }\n            }\n        \n        case types.notesAddNew:\n            return{\n                ...state,\n                notes:[ action.payload, ...state.notes ]\n            }\n        case types.notesLoad:\n            return{\n                ...state,\n                notes:[ ...action.payload ]\n            }\n        case types.notesUpdated:\n            return{\n                ...state,\n                notes: state.notes.map(\n                    note => note.id === action.payload.id\n                        ? action.payload.note\n                        : note\n                )\n            }\n        case types.notesDelete:\n            return{\n                ...state,\n                active: null,\n                notes: state.notes.filter( note => note.id !== action.payload )\n            }\n        case types.notesLogoutCleaning:\n            return{\n                ...state,\n                active:null,\n                notes:[]\n            }\n    \n        default:\n            return state;\n    }\n\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    loading:false,\n    msgError:null\n}\n\n\nexport const uiReducer = ( state = initialState, action  ) =>{\n\n    switch (action.type) {\n        case types.uiSetError:\n            return{\n                ...state,\n                msgError: action.payload\n            }\n        case types.uiRemoveError:\n                return{\n                    ...state,\n                    msgError:null\n                }\n        case types.uiStartLoading:\n            return{\n                ...state,\n                loading: true\n            }\n        case types.uiFinishLoading:\n                return{\n                    ...state,\n                    loading:false\n                }\n        default:\n            return state;\n    }\n}","import { createStore,combineReducers, applyMiddleware, compose } from'redux';\nimport thunk from 'redux-thunk';\n\nimport { authReducer } from '../reducers/authReducer';\nimport { notesReducer } from '../reducers/notesReducer';\nimport { uiReducer } from '../reducers/uiReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\n\nconst reducers = combineReducers({\n\n    auth: authReducer,\n    ui:uiReducer,\n    notes: notesReducer\n\n});\n\nexport const store = createStore(\n    reducers,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);","import { types } from \"../types/types\";\n\n\nexport const authReducer = ( state={}, action ) =>{\n\n    switch (action.type) {\n        case types.login:\n            return{\n                uid: action.payload.uid,\n                name: action.payload.displayName \n            }\n        case types.logout:\n            return{ }\n\n        default:\n            return state;\n    }\n\n}","import React from 'react'\nimport { Provider } from 'react-redux'\n\nimport { AppRouter } from './routers/AppRouter';\nimport { store } from './store/store'\n\nexport const JournalApp = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter/>\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss'\n\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}